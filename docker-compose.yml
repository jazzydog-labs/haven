version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: haven-postgres
    environment:
      POSTGRES_USER: haven
      POSTGRES_PASSWORD: haven
      POSTGRES_DB: haven
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - haven-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U haven"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
      target: development
    container_name: haven-api
    ports:
      - "8080:8080"
    environment:
      # Database connection using container networking
      HAVEN_DATABASE__HOST: postgres
      HAVEN_DATABASE__PORT: 5432
      HAVEN_DATABASE__USERNAME: haven
      HAVEN_DATABASE__PASSWORD: haven
      HAVEN_DATABASE__DATABASE: haven
      # Hydra config overrides
      HYDRA_FULL_ERROR: 1
    volumes:
      # Mount source code for hot-reload
      - ./apps/api/src:/app/src:cached
      - ./apps/api/conf:/app/conf:cached
      - ./apps/api/alembic:/app/alembic:cached
      - ./apps/api/alembic.ini:/app/alembic.ini:cached
      - ./apps/api/tests:/app/tests:cached
      - ./apps/api/pyproject.toml:/app/pyproject.toml:cached
      - ./apps/api/pytest.ini:/app/pytest.ini:cached
      # Mount logs directory
      - ./apps/api/logs:/app/logs
      # Mount .tmp directory for diff generation output
      - ./.tmp:/app/.tmp
      # Mount git repository for diff generation (read-only)
      - ./:/repo:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - haven-network
    command: ["python", "-m", "haven.main"]

networks:
  haven-network:
    driver: bridge

volumes:
  postgres-data: