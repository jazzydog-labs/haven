[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch]
# Define workspace members
workspace = { members = ["apps/*", "packages/*"] }

[project]
name = "haven-monorepo"
version = "0.1.0"
description = "Haven monorepo - Self-contained microservice with React client"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"

# Root-level development dependencies
[project.optional-dependencies]
dev = [
    "ruff>=0.1.11",
    "pyright>=1.1.348",
    "pre-commit>=3.6.0",
]

# Shared tool configurations
[tool.ruff]
target-version = "py312"
line-length = 100
fix = true
src = ["apps/api/src", "packages/*/src"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # `zip()` without an explicit `strict=` parameter
]

[tool.ruff.lint.isort]
known-first-party = ["haven"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["apps/api/src", "packages/*/src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "build",
    "dist",
]
typeCheckingMode = "strict"
pythonVersion = "3.12"
pythonPlatform = "All"