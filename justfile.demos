# Demo commands for showcasing features
# This file is imported by the main Justfile

# Demo command placeholder
demo:
    @echo "üéØ Available demo commands:"
    @echo "  just demo-health        - Test health endpoints"
    @echo "  just demo-api           - Show REST API CRUD operations"
    @echo "  just demo-graphql       - Demonstrate GraphQL queries"
    @echo "  just demo-docker        - Test containerized services"
    @echo "  just demo-migrations    - Show migration strategies"
    @echo "  just demo-commits       - View all commits and diffs"
    @echo "  just demo-diff-generation - Generate repository diffs"

# Demo: Health check endpoints
demo-health:
    @echo "üè• Testing health endpoints..."
    @echo "REST Health:"
    curl -s http://localhost:8080/health | jq '.' || echo "‚ùå API not running - start with: just run"
    @echo ""
    @echo "GraphQL Health:"
    curl -s -X POST http://localhost:8080/graphql \
        -H "Content-Type: application/json" \
        -d '{"query": "{ health { status message timestamp } }"}' | jq '.' || echo "‚ùå GraphQL not available"

# Demo: REST API CRUD operations
demo-api:
    @echo "üîå Testing REST API endpoints..."
    @echo "1. Create a record:"
    curl -s -X POST http://localhost:8080/api/v1/records \
        -H "Content-Type: application/json" \
        -d '{"name": "Demo Record", "description": "Created by demo"}' | jq '.' || echo "‚ùå API not running"
    @echo ""
    @echo "2. List all records:"
    curl -s http://localhost:8080/api/v1/records | jq '.' || echo "‚ùå API not running"
    @echo ""
    @echo "üìö Full API docs at: http://localhost:8080/docs"

# Demo: GraphQL operations
demo-graphql:
    @echo "üîÆ Testing GraphQL operations..."
    @echo "1. Query all records:"
    curl -s -X POST http://localhost:8080/graphql \
        -H "Content-Type: application/json" \
        -d '{"query": "{ records { id name description createdAt } }"}' | jq '.' || echo "‚ùå GraphQL not available"
    @echo ""
    @echo "2. Create via mutation:"
    curl -s -X POST http://localhost:8080/graphql \
        -H "Content-Type: application/json" \
        -d '{"query": "mutation { createRecord(input: {name: \"GraphQL Demo\", description: \"Created via GraphQL\"}) { id name } }"}' | jq '.' || echo "‚ùå GraphQL not available"
    @echo ""
    @echo "üéÆ Interactive GraphQL at: http://localhost:8080/graphql"

# Demo: Docker containerization
demo-docker:
    @echo "üê≥ Testing Docker setup..."
    @echo "Container status:"
    docker compose ps
    @echo ""
    @echo "Testing containerized API:"
    docker compose exec api curl -s http://localhost:8080/health | jq '.' || echo "‚ùå Container not running"
    @echo ""
    @echo "Database connection:"
    docker compose exec postgres pg_isready || echo "‚ùå PostgreSQL not ready"

# Demo: Migration strategies
demo-migrations:
    @echo "üóÑÔ∏è Demonstrating migration strategies..."
    @echo "Current migration status:"
    just db-current-docker || echo "‚ùå Database not running"
    @echo ""
    @echo "Available migration methods:"
    @echo "1. Host-based:     just db-migrate"
    @echo "2. Exec method:    just db-migrate-docker"
    @echo "3. One-shot:       just db-migrate-run"
    @echo "4. Service:        docker compose --profile migration run migrate"

# Demo: View all commits and diffs in browser (single command)
demo-commits:
    ./scripts/demo-commits.sh {{ api_dir }} {{ python }}

# Demo: Diff Generation API (legacy - requires manual server start)
demo-diff-generation:
    ./scripts/demo-diff-generation.sh {{ api_dir }} {{ python }}

# Demo commands in Docker container
demo-commits-docker:
    docker compose exec api python -m haven.cli demo-commits

demo-diff-generation-docker:
    docker compose exec api python -m haven.cli demo-diff-generation

# Demo: CORS configuration
demo-cors:
    @echo "üåê Testing CORS configuration..."
    @echo "Current CORS settings:"
    @echo ""
    @echo "Allowed origins:"
    @grep -A 10 "cors:" apps/api/conf/environment/local.yaml | grep -E "^\s*-" || echo "No origins configured"
    @echo ""
    @echo "Testing cross-origin request:"
    curl -s -X OPTIONS http://localhost:8080/api/v1/records \
        -H "Origin: http://localhost:3000" \
        -H "Access-Control-Request-Method: GET" \
        -I | grep -i "access-control" || echo "‚ùå CORS headers not found"
    @echo ""
    @echo "Local domains setup:"
    @grep "haven.local" /etc/hosts || echo "No local domains configured"
    @echo ""
    @echo "üí° To set up local domains: sudo ./scripts/setup-local-domains.sh"
    @echo "üí° To run without CORS: just run-proxy"

# Demo: All features in sequence
demo-all:
    @echo "üé™ Running all demos..."
    @echo "=" | head -c 60 && echo
    just demo-health
    @echo "=" | head -c 60 && echo
    just demo-api
    @echo "=" | head -c 60 && echo
    just demo-graphql
    @echo "=" | head -c 60 && echo
    just demo-docker
    @echo "=" | head -c 60 && echo
    just demo-migrations
    @echo "=" | head -c 60 && echo
    just demo-cors
    @echo "=" | head -c 60 && echo
    @echo "‚úÖ All demos complete!"