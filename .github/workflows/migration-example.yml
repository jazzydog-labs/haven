# Example GitHub Actions workflow showing database migration in CI/CD
# This file demonstrates how to run migrations in an automated pipeline

name: Database Migration Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-with-migrations:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: haven
          POSTGRES_PASSWORD: haven
          POSTGRES_DB: haven
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build API image
      run: docker build -t haven-api:ci ./apps/api
    
    - name: Run migrations
      run: |
        docker run --rm \
          --network host \
          -e HAVEN_DATABASE__HOST=localhost \
          -e HAVEN_DATABASE__PORT=5432 \
          -e HAVEN_DATABASE__USERNAME=haven \
          -e HAVEN_DATABASE__PASSWORD=haven \
          -e HAVEN_DATABASE__DATABASE=haven \
          haven-api:ci \
          alembic upgrade head
    
    - name: Run tests
      run: |
        docker run --rm \
          --network host \
          -e HAVEN_DATABASE__HOST=localhost \
          -e HAVEN_DATABASE__PORT=5432 \
          -e HAVEN_DATABASE__USERNAME=haven \
          -e HAVEN_DATABASE__PASSWORD=haven \
          -e HAVEN_DATABASE__DATABASE=haven \
          haven-api:ci \
          pytest tests/

  deploy-migrations:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test-with-migrations
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build and push migration image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: haven-migrations
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./apps/api
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Run migrations in production
      run: |
        # Example: Run as ECS task
        aws ecs run-task \
          --cluster production \
          --task-definition haven-migrations \
          --overrides "{\"containerOverrides\":[{\"name\":\"migrate\",\"environment\":[{\"name\":\"IMAGE_TAG\",\"value\":\"${{ github.sha }}\"}]}]}"